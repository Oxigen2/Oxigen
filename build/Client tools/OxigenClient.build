<?xml version="1.0"?>
<!-- Generated by NAntBuilder v2.0 -->
<project default="deploy">
	<property name="BaseSolutionDir" value="C:\Oxigen2\Oxigen\app\"/>
	<property name="ObfuscatorDir" value="C:\Oxigen2\Oxigen\build\Client tools\CryptoObfuscator\"/>
	<property name="SolutionPath" value="C:\Oxigen2\Oxigen\OxigenIIAdvertising.sln"/>
	<property name="CryptoObfuscatorPath" value="C:\Program Files\LogicNP Software\Crypto Obfuscator For .Net 2010 R2\co.exe"/>
	<property name="SignToolPath" value="C:\Program Files\Microsoft SDKs\Windows\v7.1\Bin\signtool.exe"/>
	<property name="CertificateLocation" value="C:\Oxigen2\Oxigen\build\Client tools\Certificates\oxigen II Ltd Code Signing Cert.pfx"/>
	<property name="InstallationPackageDir" value="C:\Oxigen2\Oxigen\build\Client tools\InstallationPackage\"/>
	<target name="deploy">
		<echo message="Building OxigenIIAdvertising.sln..." />
		<!-- <msbuild project="${SolutionPath}">
			<property name="Configuration" value="Release" />			
			<arg value="/t:Rebuild" />
		</msbuild> -->
		<echo message="Encrypting string data in client-side binaries..." />
		<!-- Call the Crypto Obfuscator program -->
		<exec program="${CryptoObfuscatorPath}" commandline="projectfile=&quot;${ObfuscatorDir}OxigenClientApps.obproj&quot;"/>
		<!-- Sign the assemblies -->		
		<!-- <call target="sign"/> -->
		<!-- Copy files to MSI Source -->
		<!-- TODO Modify Crypto Obfuscator Package to dump obfuscated files to InstallationPackageDir -->
		<!-- TODO Delete pdbs from InstallationPackageDir -->
		<!-- Copy files needed to create the client MSI. Obfudcated files will be created on the
		same directory by Crypto Obfuscator so there is no to copy them here. -->
		<copy todir="${InstallationPackageDir}" failonerror="true">
			<fileset basedir="${BaseSolutionDir}Assets\bin\Release\">
				<include name="OxigenAssets.dll" />
			</fileset>
		</copy>	
		<copy todir="${InstallationPackageDir}" failonerror="true">
			<fileset basedir="${BaseSolutionDir}BoolContainerLib\bin\Release\">
				<include name="OxigenBoolContainerLib.dll" />
			</fileset>
		</copy>	
		<copy todir="${InstallationPackageDir}" failonerror="true">
			<fileset basedir="${BaseSolutionDir}DataAggregators\bin\Release\">
				<include name="DataAggregators.dll" />
			</fileset>
		</copy>	
		<copy todir="${InstallationPackageDir}" failonerror="true">
			<fileset basedir="${BaseSolutionDir}DemographicRange\bin\Release\">
				<include name="OxigenDemographicRange.dll" />
			</fileset>
		</copy>	
		<copy todir="${InstallationPackageDir}" failonerror="true">
			<fileset basedir="${BaseSolutionDir}EncryptionDecryption\bin\Release\">
				<include name="OxigenEncryptionDecryption.dll" />
			</fileset>
		</copy>	
		<copy todir="${InstallationPackageDir}" failonerror="true">
			<fileset basedir="${BaseSolutionDir}FileChecksumCalculator\FileChecksumCalculator\bin\Release\">
				<include name="OxigenFileChecksumCalculator.dll" />
			</fileset>
		</copy>	
		<copy todir="${InstallationPackageDir}" failonerror="true">
			<fileset basedir="${BaseSolutionDir}FileLocker\bin\Release\">
				<include name="OxigenFileLocker.dll" />
			</fileset>
		</copy>	
		<copy todir="${InstallationPackageDir}" failonerror="true">
			<fileset basedir="${BaseSolutionDir}FileRightsChecker\bin\Release\">
				<include name="OxigenFileRightsChecker.dll" />
			</fileset>
		</copy>	
		<copy todir="${InstallationPackageDir}" failonerror="true">
			<fileset basedir="${BaseSolutionDir}FlatAggregatedLogStructures\bin\Release\">
				<include name="OxigenEncryptionDecryption.dll" />
			</fileset>
		</copy>	
		<copy todir="${InstallationPackageDir}" failonerror="true">
			<fileset basedir="${BaseSolutionDir}InterCommunicationStructures\bin\Release\">
				<include name="OxigenInterCommunicationStructures.dll" />
			</fileset>
		</copy>	
		<copy todir="${InstallationPackageDir}" failonerror="true">
			<fileset basedir="${BaseSolutionDir}InternetConnectionCheck\bin\Release\">
				<include name="OxigenInternetConnectionCheck.dll" />
			</fileset>
		</copy>	
		<copy todir="${InstallationPackageDir}" failonerror="true">
			<fileset basedir="${BaseSolutionDir}LinqToHashSet\bin\Release\">
				<include name="OxigenLinqToHashSet.dll" />
			</fileset>
		</copy>	
		<copy todir="${InstallationPackageDir}" failonerror="true">
			<fileset basedir="${BaseSolutionDir}LogFileWriter\bin\Release\">
				<include name="OxigenLogFileWriter.dll" />
			</fileset>
		</copy>	
		<copy todir="${InstallationPackageDir}" failonerror="true">
			<fileset basedir="${BaseSolutionDir}LogWriteOperations\bin\Release\">
				<include name="OxigenLogWriteOperations.dll" />
			</fileset>
		</copy>	
		<copy todir="${InstallationPackageDir}" failonerror="true">
			<fileset basedir="${BaseSolutionDir}NoAssetsAnimator\bin\Release\">
				<include name="OxigenNoAssetsAnimator.dll" />
			</fileset>
		</copy>	
		<copy todir="${InstallationPackageDir}" failonerror="true">
			<fileset basedir="${BaseSolutionDir}OxigenIIAdvertList\bin\Release\">
				<include name="OxigenAdvertList.dll" />
			</fileset>
		</copy>	
		<call target="makeMSI"/>
		<!-- TODO Sign the MSI -->
	</target>
	<target name="sign">
		<echo message="Signing the client-side binaries..." />
		<foreach item="Folder" property="OutputDir">
			<in>
				<items basedir="${BaseSolutionDir}">
					<!-- Only sign the release build files -->
					<include name="**\bin\Release\" />
				</items>
			</in>
			<do>
				<echo message="Signing the Release binaries in ${OutputDir}..." />
				<!-- Only sign DLLs, EXEs and the SCR. MSI will be taken care of when the obfuscated files are signed. -->
				<exec program="${SignToolPath}" commandline="sign /f &quot;${CertificateLocation}&quot; /p 5513070 /t http://timestamp.verisign.com/scripts/timstamp.dll ${OutputDir}\*.exe" failonerror="false"/>
				<exec program="${SignToolPath}" commandline="sign /f &quot;${CertificateLocation}&quot; /p 5513070 /t http://timestamp.verisign.com/scripts/timstamp.dll ${OutputDir}\*.dll" failonerror="false"/>
				<exec program="${SignToolPath}" commandline="sign /f &quot;${CertificateLocation}&quot; /p 5513070 /t http://timestamp.verisign.com/scripts/timstamp.dll ${OutputDir}\*.scr" failonerror="false"/>
			</do>
		</foreach>
		<echo message="Signing the binaries with encrypted strings..." />	
		<exec program="${SignToolPath}" commandline="sign /f &quot;${CertificateLocation}&quot; /p 5513070 /t http://timestamp.verisign.com/scripts/timstamp.dll ${ObfuscatorDir}\CryptoObfuscator_Output\*.exe" failonerror="false" />
		<exec program="${SignToolPath}" commandline="sign /f &quot;${CertificateLocation}&quot; /p 5513070 /t http://timestamp.verisign.com/scripts/timstamp.dll ${ObfuscatorDir}\CryptoObfuscator_Output\*.scr" failonerror="false" />
		<exec program="${SignToolPath}" commandline="sign /f &quot;${CertificateLocation}&quot; /p 5513070 /t http://timestamp.verisign.com/scripts/timstamp.dll ${ObfuscatorDir}\CryptoObfuscator_Output\*.dll" failonerror="false" />	
		<exec program="${SignToolPath}" commandline="sign /f &quot;${CertificateLocation}&quot; /p 5513070 /t http://timestamp.verisign.com/scripts/timstamp.dll ${ObfuscatorDir}\CryptoObfuscator_Output\*.msi" failonerror="false" />	
	</target>
	<target name="makeMSI">
		<echo message="Creating the MSI..." />
		
		
	</target>
</project>
