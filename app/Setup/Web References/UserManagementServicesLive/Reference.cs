//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.225
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.225.
// 
#pragma warning disable 1591

namespace Setup.UserManagementServicesLive {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    // CODEGEN: The optional WSDL extension element 'PolicyReference' from namespace 'http://schemas.xmlsoap.org/ws/2004/09/policy' was not handled.
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_IUserManagementServicesStreamer", Namespace="http://oxigen.net")]
    public partial class BasicHttpBinding_IUserManagementServicesStreamer : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private @long channelIDField;
        
        private @string checksumField;
        
        private DataFileType dataFileTypeValueField;
        
        private string1 machineGUIDField;
        
        private string2 systemPassPhraseField;
        
        private string3 userGUIDField;
        
        private string4 errorCodeField;
        
        private ErrorSeverity errorSeverityValueField;
        
        private ErrorStatus errorStatusValueField;
        
        private string5 messageField;
               
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public BasicHttpBinding_IUserManagementServicesStreamer() {
            this.Url = global::Setup.Properties.Settings.Default.Setup_UserManagementServicesLive_UserManagementServices;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public @long ChannelID {
            get {
                return this.channelIDField;
            }
            set {
                this.channelIDField = value;
            }
        }
        
        public @string Checksum {
            get {
                return this.checksumField;
            }
            set {
                this.checksumField = value;
            }
        }
        
        public DataFileType DataFileTypeValue {
            get {
                return this.dataFileTypeValueField;
            }
            set {
                this.dataFileTypeValueField = value;
            }
        }
        
        public string1 MachineGUID {
            get {
                return this.machineGUIDField;
            }
            set {
                this.machineGUIDField = value;
            }
        }
        
        public string2 SystemPassPhrase {
            get {
                return this.systemPassPhraseField;
            }
            set {
                this.systemPassPhraseField = value;
            }
        }
        
        public string3 UserGUID {
            get {
                return this.userGUIDField;
            }
            set {
                this.userGUIDField = value;
            }
        }
        
        public string4 ErrorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
            }
        }
        
        public ErrorSeverity ErrorSeverityValue {
            get {
                return this.errorSeverityValueField;
            }
            set {
                this.errorSeverityValueField = value;
            }
        }
        
        public ErrorStatus ErrorStatusValue {
            get {
                return this.errorStatusValueField;
            }
            set {
                this.errorStatusValueField = value;
            }
        }
        
        public string5 Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    // CODEGEN: The optional WSDL extension element 'PolicyReference' from namespace 'http://schemas.xmlsoap.org/ws/2004/09/policy' was not handled.
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_IUserManagementServicesNonStreamer", Namespace="http://oxigen.net")]
    public partial class BasicHttpBinding_IUserManagementServicesNonStreamer : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetUserExistsByUserCredentialsOperationCompleted;
        
        private System.Threading.SendOrPostCallback RegisterNewUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetExistingUserDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateUserAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPcListForInstallerEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPcListForInstallerGUIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback LinkPCAndSubscriptionsExistingPCOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckEmailAddressExistsOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditSubscriptionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPCSubscriptionsByPCIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPCSubscriptionsByMachineGUIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMatchedUserGUIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMatchedMachineGUIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendEmailReminderOperationCompleted;
        
        private System.Threading.SendOrPostCallback RegisterSoftwareUninstallOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendErrorReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreatePCIfNotExistsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SyncWithServerNoPersonalDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserGUIDByUsernameOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveStreamsFromSilentMergeOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReplaceStreamsFromSilentMergeOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddStreamsFromSilentMergeOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public BasicHttpBinding_IUserManagementServicesNonStreamer() {
            this.Url = "https://staging-usermanagementservices.oxigen.net/UserManagementServices.svc";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetUserExistsByUserCredentialsCompletedEventHandler GetUserExistsByUserCredentialsCompleted;
        
        /// <remarks/>
        public event RegisterNewUserCompletedEventHandler RegisterNewUserCompleted;
        
        /// <remarks/>
        public event GetExistingUserDetailsCompletedEventHandler GetExistingUserDetailsCompleted;
        
        /// <remarks/>
        public event UpdateUserAccountCompletedEventHandler UpdateUserAccountCompleted;
        
        /// <remarks/>
        public event GetPcListForInstallerEmailCompletedEventHandler GetPcListForInstallerEmailCompleted;
        
        /// <remarks/>
        public event GetPcListForInstallerGUIDCompletedEventHandler GetPcListForInstallerGUIDCompleted;
        
        /// <remarks/>
        public event LinkPCAndSubscriptionsExistingPCCompletedEventHandler LinkPCAndSubscriptionsExistingPCCompleted;
        
        /// <remarks/>
        public event CheckEmailAddressExistsCompletedEventHandler CheckEmailAddressExistsCompleted;
        
        /// <remarks/>
        public event EditSubscriptionsCompletedEventHandler EditSubscriptionsCompleted;
        
        /// <remarks/>
        public event GetPCSubscriptionsByPCIDCompletedEventHandler GetPCSubscriptionsByPCIDCompleted;
        
        /// <remarks/>
        public event GetPCSubscriptionsByMachineGUIDCompletedEventHandler GetPCSubscriptionsByMachineGUIDCompleted;
        
        /// <remarks/>
        public event GetMatchedUserGUIDCompletedEventHandler GetMatchedUserGUIDCompleted;
        
        /// <remarks/>
        public event GetMatchedMachineGUIDCompletedEventHandler GetMatchedMachineGUIDCompleted;
        
        /// <remarks/>
        public event SendEmailReminderCompletedEventHandler SendEmailReminderCompleted;
        
        /// <remarks/>
        public event RegisterSoftwareUninstallCompletedEventHandler RegisterSoftwareUninstallCompleted;
        
        /// <remarks/>
        public event SendErrorReportCompletedEventHandler SendErrorReportCompleted;
        
        /// <remarks/>
        public event CreatePCIfNotExistsCompletedEventHandler CreatePCIfNotExistsCompleted;
        
        /// <remarks/>
        public event SyncWithServerNoPersonalDetailsCompletedEventHandler SyncWithServerNoPersonalDetailsCompleted;
        
        /// <remarks/>
        public event GetUserGUIDByUsernameCompletedEventHandler GetUserGUIDByUsernameCompleted;
        
        /// <remarks/>
        public event RemoveStreamsFromSilentMergeCompletedEventHandler RemoveStreamsFromSilentMergeCompleted;
        
        /// <remarks/>
        public event ReplaceStreamsFromSilentMergeCompletedEventHandler ReplaceStreamsFromSilentMergeCompleted;
        
        /// <remarks/>
        public event AddStreamsFromSilentMergeCompletedEventHandler AddStreamsFromSilentMergeCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://oxigen.net/IUserManagementServicesNonStreamer/GetUserExistsByUserCredentia" +
            "ls", RequestNamespace="http://oxigen.net", ResponseNamespace="http://oxigen.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public SimpleErrorWrapper GetUserExistsByUserCredentials([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string emailAddress, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string systemPassPhrase, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string userGUID) {
            object[] results = this.Invoke("GetUserExistsByUserCredentials", new object[] {
                        emailAddress,
                        password,
                        systemPassPhrase});
            userGUID = ((string)(results[1]));
            return ((SimpleErrorWrapper)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserExistsByUserCredentialsAsync(string emailAddress, string password, string systemPassPhrase) {
            this.GetUserExistsByUserCredentialsAsync(emailAddress, password, systemPassPhrase, null);
        }
        
        /// <remarks/>
        public void GetUserExistsByUserCredentialsAsync(string emailAddress, string password, string systemPassPhrase, object userState) {
            if ((this.GetUserExistsByUserCredentialsOperationCompleted == null)) {
                this.GetUserExistsByUserCredentialsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserExistsByUserCredentialsOperationCompleted);
            }
            this.InvokeAsync("GetUserExistsByUserCredentials", new object[] {
                        emailAddress,
                        password,
                        systemPassPhrase}, this.GetUserExistsByUserCredentialsOperationCompleted, userState);
        }
        
        private void OnGetUserExistsByUserCredentialsOperationCompleted(object arg) {
            if ((this.GetUserExistsByUserCredentialsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserExistsByUserCredentialsCompleted(this, new GetUserExistsByUserCredentialsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://oxigen.net/IUserManagementServicesNonStreamer/RegisterNewUser", RequestNamespace="http://oxigen.net", ResponseNamespace="http://oxigen.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public SimpleErrorWrapper RegisterNewUser(
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string emailAddress, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string firstName, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string lastName, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string gender, 
                    System.DateTime dob, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool dobSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string townCity, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string state, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string country, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string occupationSector, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string employmentLevel, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string annualHouseholdIncome, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userGUID, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string machineGUID, 
                    int softwareMajorVersionNumber, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool softwareMajorVersionNumberSpecified, 
                    int softwareMinorVersionNumber, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool softwareMinorVersionNumberSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string macAddress, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string machineName, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ChannelSubscriptions channelSubscriptions, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string systemPassPhrase) {
            object[] results = this.Invoke("RegisterNewUser", new object[] {
                        emailAddress,
                        password,
                        firstName,
                        lastName,
                        gender,
                        dob,
                        dobSpecified,
                        townCity,
                        state,
                        country,
                        occupationSector,
                        employmentLevel,
                        annualHouseholdIncome,
                        userGUID,
                        machineGUID,
                        softwareMajorVersionNumber,
                        softwareMajorVersionNumberSpecified,
                        softwareMinorVersionNumber,
                        softwareMinorVersionNumberSpecified,
                        macAddress,
                        machineName,
                        channelSubscriptions,
                        systemPassPhrase});
            return ((SimpleErrorWrapper)(results[0]));
        }
        
        /// <remarks/>
        public void RegisterNewUserAsync(
                    string emailAddress, 
                    string password, 
                    string firstName, 
                    string lastName, 
                    string gender, 
                    System.DateTime dob, 
                    bool dobSpecified, 
                    string townCity, 
                    string state, 
                    string country, 
                    string occupationSector, 
                    string employmentLevel, 
                    string annualHouseholdIncome, 
                    string userGUID, 
                    string machineGUID, 
                    int softwareMajorVersionNumber, 
                    bool softwareMajorVersionNumberSpecified, 
                    int softwareMinorVersionNumber, 
                    bool softwareMinorVersionNumberSpecified, 
                    string macAddress, 
                    string machineName, 
                    ChannelSubscriptions channelSubscriptions, 
                    string systemPassPhrase) {
            this.RegisterNewUserAsync(emailAddress, password, firstName, lastName, gender, dob, dobSpecified, townCity, state, country, occupationSector, employmentLevel, annualHouseholdIncome, userGUID, machineGUID, softwareMajorVersionNumber, softwareMajorVersionNumberSpecified, softwareMinorVersionNumber, softwareMinorVersionNumberSpecified, macAddress, machineName, channelSubscriptions, systemPassPhrase, null);
        }
        
        /// <remarks/>
        public void RegisterNewUserAsync(
                    string emailAddress, 
                    string password, 
                    string firstName, 
                    string lastName, 
                    string gender, 
                    System.DateTime dob, 
                    bool dobSpecified, 
                    string townCity, 
                    string state, 
                    string country, 
                    string occupationSector, 
                    string employmentLevel, 
                    string annualHouseholdIncome, 
                    string userGUID, 
                    string machineGUID, 
                    int softwareMajorVersionNumber, 
                    bool softwareMajorVersionNumberSpecified, 
                    int softwareMinorVersionNumber, 
                    bool softwareMinorVersionNumberSpecified, 
                    string macAddress, 
                    string machineName, 
                    ChannelSubscriptions channelSubscriptions, 
                    string systemPassPhrase, 
                    object userState) {
            if ((this.RegisterNewUserOperationCompleted == null)) {
                this.RegisterNewUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegisterNewUserOperationCompleted);
            }
            this.InvokeAsync("RegisterNewUser", new object[] {
                        emailAddress,
                        password,
                        firstName,
                        lastName,
                        gender,
                        dob,
                        dobSpecified,
                        townCity,
                        state,
                        country,
                        occupationSector,
                        employmentLevel,
                        annualHouseholdIncome,
                        userGUID,
                        machineGUID,
                        softwareMajorVersionNumber,
                        softwareMajorVersionNumberSpecified,
                        softwareMinorVersionNumber,
                        softwareMinorVersionNumberSpecified,
                        macAddress,
                        machineName,
                        channelSubscriptions,
                        systemPassPhrase}, this.RegisterNewUserOperationCompleted, userState);
        }
        
        private void OnRegisterNewUserOperationCompleted(object arg) {
            if ((this.RegisterNewUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegisterNewUserCompleted(this, new RegisterNewUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://oxigen.net/IUserManagementServicesNonStreamer/GetExistingUserDetails", RequestNamespace="http://oxigen.net", ResponseNamespace="http://oxigen.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public SimpleErrorWrapper GetExistingUserDetails([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userGUID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string systemPassPhrase, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out UserInfo userInfo) {
            object[] results = this.Invoke("GetExistingUserDetails", new object[] {
                        userGUID,
                        password,
                        systemPassPhrase});
            userInfo = ((UserInfo)(results[1]));
            return ((SimpleErrorWrapper)(results[0]));
        }
        
        /// <remarks/>
        public void GetExistingUserDetailsAsync(string userGUID, string password, string systemPassPhrase) {
            this.GetExistingUserDetailsAsync(userGUID, password, systemPassPhrase, null);
        }
        
        /// <remarks/>
        public void GetExistingUserDetailsAsync(string userGUID, string password, string systemPassPhrase, object userState) {
            if ((this.GetExistingUserDetailsOperationCompleted == null)) {
                this.GetExistingUserDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetExistingUserDetailsOperationCompleted);
            }
            this.InvokeAsync("GetExistingUserDetails", new object[] {
                        userGUID,
                        password,
                        systemPassPhrase}, this.GetExistingUserDetailsOperationCompleted, userState);
        }
        
        private void OnGetExistingUserDetailsOperationCompleted(object arg) {
            if ((this.GetExistingUserDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetExistingUserDetailsCompleted(this, new GetExistingUserDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://oxigen.net/IUserManagementServicesNonStreamer/UpdateUserAccount", RequestNamespace="http://oxigen.net", ResponseNamespace="http://oxigen.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public SimpleErrorWrapper UpdateUserAccount(
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string emailAddress, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string firstName, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string lastName, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string gender, 
                    System.DateTime dob, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool dobSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string townCity, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string state, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string country, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string occupationSector, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string employmentLevel, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string annualHouseholdIncome, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ChannelSubscriptions channelSubscriptions, 
                    int softwareMajorVersionNumber, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool softwareMajorVersionNumberSpecified, 
                    int softwareMinorVersionNumber, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool softwareMinorVersionNumberSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string machineGUID, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string newPcName, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string macAddress, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string systemPassPhrase) {
            object[] results = this.Invoke("UpdateUserAccount", new object[] {
                        emailAddress,
                        password,
                        firstName,
                        lastName,
                        gender,
                        dob,
                        dobSpecified,
                        townCity,
                        state,
                        country,
                        occupationSector,
                        employmentLevel,
                        annualHouseholdIncome,
                        channelSubscriptions,
                        softwareMajorVersionNumber,
                        softwareMajorVersionNumberSpecified,
                        softwareMinorVersionNumber,
                        softwareMinorVersionNumberSpecified,
                        machineGUID,
                        newPcName,
                        macAddress,
                        systemPassPhrase});
            return ((SimpleErrorWrapper)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateUserAccountAsync(
                    string emailAddress, 
                    string password, 
                    string firstName, 
                    string lastName, 
                    string gender, 
                    System.DateTime dob, 
                    bool dobSpecified, 
                    string townCity, 
                    string state, 
                    string country, 
                    string occupationSector, 
                    string employmentLevel, 
                    string annualHouseholdIncome, 
                    ChannelSubscriptions channelSubscriptions, 
                    int softwareMajorVersionNumber, 
                    bool softwareMajorVersionNumberSpecified, 
                    int softwareMinorVersionNumber, 
                    bool softwareMinorVersionNumberSpecified, 
                    string machineGUID, 
                    string newPcName, 
                    string macAddress, 
                    string systemPassPhrase) {
            this.UpdateUserAccountAsync(emailAddress, password, firstName, lastName, gender, dob, dobSpecified, townCity, state, country, occupationSector, employmentLevel, annualHouseholdIncome, channelSubscriptions, softwareMajorVersionNumber, softwareMajorVersionNumberSpecified, softwareMinorVersionNumber, softwareMinorVersionNumberSpecified, machineGUID, newPcName, macAddress, systemPassPhrase, null);
        }
        
        /// <remarks/>
        public void UpdateUserAccountAsync(
                    string emailAddress, 
                    string password, 
                    string firstName, 
                    string lastName, 
                    string gender, 
                    System.DateTime dob, 
                    bool dobSpecified, 
                    string townCity, 
                    string state, 
                    string country, 
                    string occupationSector, 
                    string employmentLevel, 
                    string annualHouseholdIncome, 
                    ChannelSubscriptions channelSubscriptions, 
                    int softwareMajorVersionNumber, 
                    bool softwareMajorVersionNumberSpecified, 
                    int softwareMinorVersionNumber, 
                    bool softwareMinorVersionNumberSpecified, 
                    string machineGUID, 
                    string newPcName, 
                    string macAddress, 
                    string systemPassPhrase, 
                    object userState) {
            if ((this.UpdateUserAccountOperationCompleted == null)) {
                this.UpdateUserAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateUserAccountOperationCompleted);
            }
            this.InvokeAsync("UpdateUserAccount", new object[] {
                        emailAddress,
                        password,
                        firstName,
                        lastName,
                        gender,
                        dob,
                        dobSpecified,
                        townCity,
                        state,
                        country,
                        occupationSector,
                        employmentLevel,
                        annualHouseholdIncome,
                        channelSubscriptions,
                        softwareMajorVersionNumber,
                        softwareMajorVersionNumberSpecified,
                        softwareMinorVersionNumber,
                        softwareMinorVersionNumberSpecified,
                        machineGUID,
                        newPcName,
                        macAddress,
                        systemPassPhrase}, this.UpdateUserAccountOperationCompleted, userState);
        }
        
        private void OnUpdateUserAccountOperationCompleted(object arg) {
            if ((this.UpdateUserAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateUserAccountCompleted(this, new UpdateUserAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://oxigen.net/IUserManagementServicesNonStreamer/GetPcListForInstallerEmail", RequestNamespace="http://oxigen.net", ResponseNamespace="http://oxigen.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public SimpleErrorWrapper GetPcListForInstallerEmail([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string emailAddress, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string systemPassPhrase, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/OxigenIIAdvertising.SOAStructures")] out PcInfo[] pcs) {
            object[] results = this.Invoke("GetPcListForInstallerEmail", new object[] {
                        emailAddress,
                        systemPassPhrase});
            pcs = ((PcInfo[])(results[1]));
            return ((SimpleErrorWrapper)(results[0]));
        }
        
        /// <remarks/>
        public void GetPcListForInstallerEmailAsync(string emailAddress, string systemPassPhrase) {
            this.GetPcListForInstallerEmailAsync(emailAddress, systemPassPhrase, null);
        }
        
        /// <remarks/>
        public void GetPcListForInstallerEmailAsync(string emailAddress, string systemPassPhrase, object userState) {
            if ((this.GetPcListForInstallerEmailOperationCompleted == null)) {
                this.GetPcListForInstallerEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPcListForInstallerEmailOperationCompleted);
            }
            this.InvokeAsync("GetPcListForInstallerEmail", new object[] {
                        emailAddress,
                        systemPassPhrase}, this.GetPcListForInstallerEmailOperationCompleted, userState);
        }
        
        private void OnGetPcListForInstallerEmailOperationCompleted(object arg) {
            if ((this.GetPcListForInstallerEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPcListForInstallerEmailCompleted(this, new GetPcListForInstallerEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://oxigen.net/IUserManagementServicesNonStreamer/GetPcListForInstallerGUID", RequestNamespace="http://oxigen.net", ResponseNamespace="http://oxigen.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public SimpleErrorWrapper GetPcListForInstallerGUID([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userGUID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string systemPassPhrase, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/OxigenIIAdvertising.SOAStructures")] out PcInfo[] pcs) {
            object[] results = this.Invoke("GetPcListForInstallerGUID", new object[] {
                        userGUID,
                        systemPassPhrase});
            pcs = ((PcInfo[])(results[1]));
            return ((SimpleErrorWrapper)(results[0]));
        }
        
        /// <remarks/>
        public void GetPcListForInstallerGUIDAsync(string userGUID, string systemPassPhrase) {
            this.GetPcListForInstallerGUIDAsync(userGUID, systemPassPhrase, null);
        }
        
        /// <remarks/>
        public void GetPcListForInstallerGUIDAsync(string userGUID, string systemPassPhrase, object userState) {
            if ((this.GetPcListForInstallerGUIDOperationCompleted == null)) {
                this.GetPcListForInstallerGUIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPcListForInstallerGUIDOperationCompleted);
            }
            this.InvokeAsync("GetPcListForInstallerGUID", new object[] {
                        userGUID,
                        systemPassPhrase}, this.GetPcListForInstallerGUIDOperationCompleted, userState);
        }
        
        private void OnGetPcListForInstallerGUIDOperationCompleted(object arg) {
            if ((this.GetPcListForInstallerGUIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPcListForInstallerGUIDCompleted(this, new GetPcListForInstallerGUIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://oxigen.net/IUserManagementServicesNonStreamer/LinkPCAndSubscriptionsExisti" +
            "ngPC", RequestNamespace="http://oxigen.net", ResponseNamespace="http://oxigen.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public SimpleErrorWrapper LinkPCAndSubscriptionsExistingPC([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userGUID, int pcID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool pcIDSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string machineGUID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string macAddress, int softwareMajorVersionNumber, [System.Xml.Serialization.XmlIgnoreAttribute()] bool softwareMajorVersionNumberSpecified, int softwareMinorVersionNumber, [System.Xml.Serialization.XmlIgnoreAttribute()] bool softwareMinorVersionNumberSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ChannelSubscriptions channelSubscriptions, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string systemPassPhrase) {
            object[] results = this.Invoke("LinkPCAndSubscriptionsExistingPC", new object[] {
                        userGUID,
                        pcID,
                        pcIDSpecified,
                        machineGUID,
                        macAddress,
                        softwareMajorVersionNumber,
                        softwareMajorVersionNumberSpecified,
                        softwareMinorVersionNumber,
                        softwareMinorVersionNumberSpecified,
                        channelSubscriptions,
                        systemPassPhrase});
            return ((SimpleErrorWrapper)(results[0]));
        }
        
        /// <remarks/>
        public void LinkPCAndSubscriptionsExistingPCAsync(string userGUID, int pcID, bool pcIDSpecified, string machineGUID, string macAddress, int softwareMajorVersionNumber, bool softwareMajorVersionNumberSpecified, int softwareMinorVersionNumber, bool softwareMinorVersionNumberSpecified, ChannelSubscriptions channelSubscriptions, string systemPassPhrase) {
            this.LinkPCAndSubscriptionsExistingPCAsync(userGUID, pcID, pcIDSpecified, machineGUID, macAddress, softwareMajorVersionNumber, softwareMajorVersionNumberSpecified, softwareMinorVersionNumber, softwareMinorVersionNumberSpecified, channelSubscriptions, systemPassPhrase, null);
        }
        
        /// <remarks/>
        public void LinkPCAndSubscriptionsExistingPCAsync(string userGUID, int pcID, bool pcIDSpecified, string machineGUID, string macAddress, int softwareMajorVersionNumber, bool softwareMajorVersionNumberSpecified, int softwareMinorVersionNumber, bool softwareMinorVersionNumberSpecified, ChannelSubscriptions channelSubscriptions, string systemPassPhrase, object userState) {
            if ((this.LinkPCAndSubscriptionsExistingPCOperationCompleted == null)) {
                this.LinkPCAndSubscriptionsExistingPCOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLinkPCAndSubscriptionsExistingPCOperationCompleted);
            }
            this.InvokeAsync("LinkPCAndSubscriptionsExistingPC", new object[] {
                        userGUID,
                        pcID,
                        pcIDSpecified,
                        machineGUID,
                        macAddress,
                        softwareMajorVersionNumber,
                        softwareMajorVersionNumberSpecified,
                        softwareMinorVersionNumber,
                        softwareMinorVersionNumberSpecified,
                        channelSubscriptions,
                        systemPassPhrase}, this.LinkPCAndSubscriptionsExistingPCOperationCompleted, userState);
        }
        
        private void OnLinkPCAndSubscriptionsExistingPCOperationCompleted(object arg) {
            if ((this.LinkPCAndSubscriptionsExistingPCCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LinkPCAndSubscriptionsExistingPCCompleted(this, new LinkPCAndSubscriptionsExistingPCCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://oxigen.net/IUserManagementServicesNonStreamer/CheckEmailAddressExists", RequestNamespace="http://oxigen.net", ResponseNamespace="http://oxigen.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public SimpleErrorWrapper CheckEmailAddressExists([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string emailAddress, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string systemPassPhrase) {
            object[] results = this.Invoke("CheckEmailAddressExists", new object[] {
                        emailAddress,
                        systemPassPhrase});
            return ((SimpleErrorWrapper)(results[0]));
        }
        
        /// <remarks/>
        public void CheckEmailAddressExistsAsync(string emailAddress, string systemPassPhrase) {
            this.CheckEmailAddressExistsAsync(emailAddress, systemPassPhrase, null);
        }
        
        /// <remarks/>
        public void CheckEmailAddressExistsAsync(string emailAddress, string systemPassPhrase, object userState) {
            if ((this.CheckEmailAddressExistsOperationCompleted == null)) {
                this.CheckEmailAddressExistsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckEmailAddressExistsOperationCompleted);
            }
            this.InvokeAsync("CheckEmailAddressExists", new object[] {
                        emailAddress,
                        systemPassPhrase}, this.CheckEmailAddressExistsOperationCompleted, userState);
        }
        
        private void OnCheckEmailAddressExistsOperationCompleted(object arg) {
            if ((this.CheckEmailAddressExistsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckEmailAddressExistsCompleted(this, new CheckEmailAddressExistsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://oxigen.net/IUserManagementServicesNonStreamer/EditSubscriptions", RequestNamespace="http://oxigen.net", ResponseNamespace="http://oxigen.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public SimpleErrorWrapper EditSubscriptions([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userGUID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string machineGUID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ChannelSubscriptions channelSubscriptions, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string systemPassPhrase) {
            object[] results = this.Invoke("EditSubscriptions", new object[] {
                        userGUID,
                        machineGUID,
                        channelSubscriptions,
                        systemPassPhrase});
            return ((SimpleErrorWrapper)(results[0]));
        }
        
        /// <remarks/>
        public void EditSubscriptionsAsync(string userGUID, string machineGUID, ChannelSubscriptions channelSubscriptions, string systemPassPhrase) {
            this.EditSubscriptionsAsync(userGUID, machineGUID, channelSubscriptions, systemPassPhrase, null);
        }
        
        /// <remarks/>
        public void EditSubscriptionsAsync(string userGUID, string machineGUID, ChannelSubscriptions channelSubscriptions, string systemPassPhrase, object userState) {
            if ((this.EditSubscriptionsOperationCompleted == null)) {
                this.EditSubscriptionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditSubscriptionsOperationCompleted);
            }
            this.InvokeAsync("EditSubscriptions", new object[] {
                        userGUID,
                        machineGUID,
                        channelSubscriptions,
                        systemPassPhrase}, this.EditSubscriptionsOperationCompleted, userState);
        }
        
        private void OnEditSubscriptionsOperationCompleted(object arg) {
            if ((this.EditSubscriptionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditSubscriptionsCompleted(this, new EditSubscriptionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://oxigen.net/IUserManagementServicesNonStreamer/GetPCSubscriptionsByPCID", RequestNamespace="http://oxigen.net", ResponseNamespace="http://oxigen.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public SimpleErrorWrapper GetPCSubscriptionsByPCID([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userGUID, int pcID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool pcIDSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string systemPassPhrase, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out ChannelSubscriptions channelSubscriptions) {
            object[] results = this.Invoke("GetPCSubscriptionsByPCID", new object[] {
                        userGUID,
                        pcID,
                        pcIDSpecified,
                        systemPassPhrase});
            channelSubscriptions = ((ChannelSubscriptions)(results[1]));
            return ((SimpleErrorWrapper)(results[0]));
        }
        
        /// <remarks/>
        public void GetPCSubscriptionsByPCIDAsync(string userGUID, int pcID, bool pcIDSpecified, string systemPassPhrase) {
            this.GetPCSubscriptionsByPCIDAsync(userGUID, pcID, pcIDSpecified, systemPassPhrase, null);
        }
        
        /// <remarks/>
        public void GetPCSubscriptionsByPCIDAsync(string userGUID, int pcID, bool pcIDSpecified, string systemPassPhrase, object userState) {
            if ((this.GetPCSubscriptionsByPCIDOperationCompleted == null)) {
                this.GetPCSubscriptionsByPCIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPCSubscriptionsByPCIDOperationCompleted);
            }
            this.InvokeAsync("GetPCSubscriptionsByPCID", new object[] {
                        userGUID,
                        pcID,
                        pcIDSpecified,
                        systemPassPhrase}, this.GetPCSubscriptionsByPCIDOperationCompleted, userState);
        }
        
        private void OnGetPCSubscriptionsByPCIDOperationCompleted(object arg) {
            if ((this.GetPCSubscriptionsByPCIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPCSubscriptionsByPCIDCompleted(this, new GetPCSubscriptionsByPCIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://oxigen.net/IUserManagementServicesNonStreamer/GetPCSubscriptionsByMachineG" +
            "UID", RequestNamespace="http://oxigen.net", ResponseNamespace="http://oxigen.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public SimpleErrorWrapper GetPCSubscriptionsByMachineGUID([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userGUID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string machineGUID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string systemPassPhrase, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out ChannelSubscriptions channelSubscriptions) {
            object[] results = this.Invoke("GetPCSubscriptionsByMachineGUID", new object[] {
                        userGUID,
                        machineGUID,
                        systemPassPhrase});
            channelSubscriptions = ((ChannelSubscriptions)(results[1]));
            return ((SimpleErrorWrapper)(results[0]));
        }
        
        /// <remarks/>
        public void GetPCSubscriptionsByMachineGUIDAsync(string userGUID, string machineGUID, string systemPassPhrase) {
            this.GetPCSubscriptionsByMachineGUIDAsync(userGUID, machineGUID, systemPassPhrase, null);
        }
        
        /// <remarks/>
        public void GetPCSubscriptionsByMachineGUIDAsync(string userGUID, string machineGUID, string systemPassPhrase, object userState) {
            if ((this.GetPCSubscriptionsByMachineGUIDOperationCompleted == null)) {
                this.GetPCSubscriptionsByMachineGUIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPCSubscriptionsByMachineGUIDOperationCompleted);
            }
            this.InvokeAsync("GetPCSubscriptionsByMachineGUID", new object[] {
                        userGUID,
                        machineGUID,
                        systemPassPhrase}, this.GetPCSubscriptionsByMachineGUIDOperationCompleted, userState);
        }
        
        private void OnGetPCSubscriptionsByMachineGUIDOperationCompleted(object arg) {
            if ((this.GetPCSubscriptionsByMachineGUIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPCSubscriptionsByMachineGUIDCompleted(this, new GetPCSubscriptionsByMachineGUIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://oxigen.net/IUserManagementServicesNonStreamer/GetMatchedUserGUID", RequestNamespace="http://oxigen.net", ResponseNamespace="http://oxigen.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public SimpleErrorWrapper GetMatchedUserGUID([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userGUID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string systemPassPhrase) {
            object[] results = this.Invoke("GetMatchedUserGUID", new object[] {
                        userGUID,
                        systemPassPhrase});
            return ((SimpleErrorWrapper)(results[0]));
        }
        
        /// <remarks/>
        public void GetMatchedUserGUIDAsync(string userGUID, string systemPassPhrase) {
            this.GetMatchedUserGUIDAsync(userGUID, systemPassPhrase, null);
        }
        
        /// <remarks/>
        public void GetMatchedUserGUIDAsync(string userGUID, string systemPassPhrase, object userState) {
            if ((this.GetMatchedUserGUIDOperationCompleted == null)) {
                this.GetMatchedUserGUIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMatchedUserGUIDOperationCompleted);
            }
            this.InvokeAsync("GetMatchedUserGUID", new object[] {
                        userGUID,
                        systemPassPhrase}, this.GetMatchedUserGUIDOperationCompleted, userState);
        }
        
        private void OnGetMatchedUserGUIDOperationCompleted(object arg) {
            if ((this.GetMatchedUserGUIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMatchedUserGUIDCompleted(this, new GetMatchedUserGUIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://oxigen.net/IUserManagementServicesNonStreamer/GetMatchedMachineGUID", RequestNamespace="http://oxigen.net", ResponseNamespace="http://oxigen.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public SimpleErrorWrapper GetMatchedMachineGUID([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userGUID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string machineGUID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string systemPassPhrase) {
            object[] results = this.Invoke("GetMatchedMachineGUID", new object[] {
                        userGUID,
                        machineGUID,
                        systemPassPhrase});
            return ((SimpleErrorWrapper)(results[0]));
        }
        
        /// <remarks/>
        public void GetMatchedMachineGUIDAsync(string userGUID, string machineGUID, string systemPassPhrase) {
            this.GetMatchedMachineGUIDAsync(userGUID, machineGUID, systemPassPhrase, null);
        }
        
        /// <remarks/>
        public void GetMatchedMachineGUIDAsync(string userGUID, string machineGUID, string systemPassPhrase, object userState) {
            if ((this.GetMatchedMachineGUIDOperationCompleted == null)) {
                this.GetMatchedMachineGUIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMatchedMachineGUIDOperationCompleted);
            }
            this.InvokeAsync("GetMatchedMachineGUID", new object[] {
                        userGUID,
                        machineGUID,
                        systemPassPhrase}, this.GetMatchedMachineGUIDOperationCompleted, userState);
        }
        
        private void OnGetMatchedMachineGUIDOperationCompleted(object arg) {
            if ((this.GetMatchedMachineGUIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMatchedMachineGUIDCompleted(this, new GetMatchedMachineGUIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://oxigen.net/IUserManagementServicesNonStreamer/SendEmailReminder", RequestNamespace="http://oxigen.net", ResponseNamespace="http://oxigen.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public SimpleErrorWrapper SendEmailReminder([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string emailAddress, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string systemPassPhrase) {
            object[] results = this.Invoke("SendEmailReminder", new object[] {
                        emailAddress,
                        systemPassPhrase});
            return ((SimpleErrorWrapper)(results[0]));
        }
        
        /// <remarks/>
        public void SendEmailReminderAsync(string emailAddress, string systemPassPhrase) {
            this.SendEmailReminderAsync(emailAddress, systemPassPhrase, null);
        }
        
        /// <remarks/>
        public void SendEmailReminderAsync(string emailAddress, string systemPassPhrase, object userState) {
            if ((this.SendEmailReminderOperationCompleted == null)) {
                this.SendEmailReminderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendEmailReminderOperationCompleted);
            }
            this.InvokeAsync("SendEmailReminder", new object[] {
                        emailAddress,
                        systemPassPhrase}, this.SendEmailReminderOperationCompleted, userState);
        }
        
        private void OnSendEmailReminderOperationCompleted(object arg) {
            if ((this.SendEmailReminderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendEmailReminderCompleted(this, new SendEmailReminderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://oxigen.net/IUserManagementServicesNonStreamer/RegisterSoftwareUninstall", RequestNamespace="http://oxigen.net", ResponseNamespace="http://oxigen.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public SimpleErrorWrapper RegisterSoftwareUninstall([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userGUID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string machineGUID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password) {
            object[] results = this.Invoke("RegisterSoftwareUninstall", new object[] {
                        userGUID,
                        machineGUID,
                        password});
            return ((SimpleErrorWrapper)(results[0]));
        }
        
        /// <remarks/>
        public void RegisterSoftwareUninstallAsync(string userGUID, string machineGUID, string password) {
            this.RegisterSoftwareUninstallAsync(userGUID, machineGUID, password, null);
        }
        
        /// <remarks/>
        public void RegisterSoftwareUninstallAsync(string userGUID, string machineGUID, string password, object userState) {
            if ((this.RegisterSoftwareUninstallOperationCompleted == null)) {
                this.RegisterSoftwareUninstallOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegisterSoftwareUninstallOperationCompleted);
            }
            this.InvokeAsync("RegisterSoftwareUninstall", new object[] {
                        userGUID,
                        machineGUID,
                        password}, this.RegisterSoftwareUninstallOperationCompleted, userState);
        }
        
        private void OnRegisterSoftwareUninstallOperationCompleted(object arg) {
            if ((this.RegisterSoftwareUninstallCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegisterSoftwareUninstallCompleted(this, new RegisterSoftwareUninstallCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://oxigen.net/IUserManagementServicesNonStreamer/SendErrorReport", RequestNamespace="http://oxigen.net", ResponseNamespace="http://oxigen.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendErrorReport([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string macAddress, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string exceptionDetails) {
            this.Invoke("SendErrorReport", new object[] {
                        macAddress,
                        exceptionDetails});
        }
        
        /// <remarks/>
        public void SendErrorReportAsync(string macAddress, string exceptionDetails) {
            this.SendErrorReportAsync(macAddress, exceptionDetails, null);
        }
        
        /// <remarks/>
        public void SendErrorReportAsync(string macAddress, string exceptionDetails, object userState) {
            if ((this.SendErrorReportOperationCompleted == null)) {
                this.SendErrorReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendErrorReportOperationCompleted);
            }
            this.InvokeAsync("SendErrorReport", new object[] {
                        macAddress,
                        exceptionDetails}, this.SendErrorReportOperationCompleted, userState);
        }
        
        private void OnSendErrorReportOperationCompleted(object arg) {
            if ((this.SendErrorReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendErrorReportCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://oxigen.net/IUserManagementServicesNonStreamer/CreatePCIfNotExists", RequestNamespace="http://oxigen.net", ResponseNamespace="http://oxigen.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public StringErrorWrapper CreatePCIfNotExists([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userGUID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string macAddress, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string machineName, int majorVersionNumber, [System.Xml.Serialization.XmlIgnoreAttribute()] bool majorVersionNumberSpecified, int minorVersionNumber, [System.Xml.Serialization.XmlIgnoreAttribute()] bool minorVersionNumberSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string systemPassPhrase) {
            object[] results = this.Invoke("CreatePCIfNotExists", new object[] {
                        userGUID,
                        macAddress,
                        machineName,
                        majorVersionNumber,
                        majorVersionNumberSpecified,
                        minorVersionNumber,
                        minorVersionNumberSpecified,
                        systemPassPhrase});
            return ((StringErrorWrapper)(results[0]));
        }
        
        /// <remarks/>
        public void CreatePCIfNotExistsAsync(string userGUID, string macAddress, string machineName, int majorVersionNumber, bool majorVersionNumberSpecified, int minorVersionNumber, bool minorVersionNumberSpecified, string systemPassPhrase) {
            this.CreatePCIfNotExistsAsync(userGUID, macAddress, machineName, majorVersionNumber, majorVersionNumberSpecified, minorVersionNumber, minorVersionNumberSpecified, systemPassPhrase, null);
        }
        
        /// <remarks/>
        public void CreatePCIfNotExistsAsync(string userGUID, string macAddress, string machineName, int majorVersionNumber, bool majorVersionNumberSpecified, int minorVersionNumber, bool minorVersionNumberSpecified, string systemPassPhrase, object userState) {
            if ((this.CreatePCIfNotExistsOperationCompleted == null)) {
                this.CreatePCIfNotExistsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreatePCIfNotExistsOperationCompleted);
            }
            this.InvokeAsync("CreatePCIfNotExists", new object[] {
                        userGUID,
                        macAddress,
                        machineName,
                        majorVersionNumber,
                        majorVersionNumberSpecified,
                        minorVersionNumber,
                        minorVersionNumberSpecified,
                        systemPassPhrase}, this.CreatePCIfNotExistsOperationCompleted, userState);
        }
        
        private void OnCreatePCIfNotExistsOperationCompleted(object arg) {
            if ((this.CreatePCIfNotExistsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreatePCIfNotExistsCompleted(this, new CreatePCIfNotExistsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://oxigen.net/IUserManagementServicesNonStreamer/SyncWithServerNoPersonalDeta" +
            "ils", RequestNamespace="http://oxigen.net", ResponseNamespace="http://oxigen.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public SimpleErrorWrapper SyncWithServerNoPersonalDetails([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userGUID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string machineGUID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ChannelSubscriptions channelSubscriptions, int softwareMajorVersionNumber, [System.Xml.Serialization.XmlIgnoreAttribute()] bool softwareMajorVersionNumberSpecified, int softwareMinorVersionNumber, [System.Xml.Serialization.XmlIgnoreAttribute()] bool softwareMinorVersionNumberSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string machineName, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string macAddress, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string systemPassPhrase) {
            object[] results = this.Invoke("SyncWithServerNoPersonalDetails", new object[] {
                        userGUID,
                        machineGUID,
                        channelSubscriptions,
                        softwareMajorVersionNumber,
                        softwareMajorVersionNumberSpecified,
                        softwareMinorVersionNumber,
                        softwareMinorVersionNumberSpecified,
                        machineName,
                        macAddress,
                        systemPassPhrase});
            return ((SimpleErrorWrapper)(results[0]));
        }
        
        /// <remarks/>
        public void SyncWithServerNoPersonalDetailsAsync(string userGUID, string machineGUID, ChannelSubscriptions channelSubscriptions, int softwareMajorVersionNumber, bool softwareMajorVersionNumberSpecified, int softwareMinorVersionNumber, bool softwareMinorVersionNumberSpecified, string machineName, string macAddress, string systemPassPhrase) {
            this.SyncWithServerNoPersonalDetailsAsync(userGUID, machineGUID, channelSubscriptions, softwareMajorVersionNumber, softwareMajorVersionNumberSpecified, softwareMinorVersionNumber, softwareMinorVersionNumberSpecified, machineName, macAddress, systemPassPhrase, null);
        }
        
        /// <remarks/>
        public void SyncWithServerNoPersonalDetailsAsync(string userGUID, string machineGUID, ChannelSubscriptions channelSubscriptions, int softwareMajorVersionNumber, bool softwareMajorVersionNumberSpecified, int softwareMinorVersionNumber, bool softwareMinorVersionNumberSpecified, string machineName, string macAddress, string systemPassPhrase, object userState) {
            if ((this.SyncWithServerNoPersonalDetailsOperationCompleted == null)) {
                this.SyncWithServerNoPersonalDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSyncWithServerNoPersonalDetailsOperationCompleted);
            }
            this.InvokeAsync("SyncWithServerNoPersonalDetails", new object[] {
                        userGUID,
                        machineGUID,
                        channelSubscriptions,
                        softwareMajorVersionNumber,
                        softwareMajorVersionNumberSpecified,
                        softwareMinorVersionNumber,
                        softwareMinorVersionNumberSpecified,
                        machineName,
                        macAddress,
                        systemPassPhrase}, this.SyncWithServerNoPersonalDetailsOperationCompleted, userState);
        }
        
        private void OnSyncWithServerNoPersonalDetailsOperationCompleted(object arg) {
            if ((this.SyncWithServerNoPersonalDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SyncWithServerNoPersonalDetailsCompleted(this, new SyncWithServerNoPersonalDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://oxigen.net/IUserManagementServicesNonStreamer/GetUserGUIDByUsername", RequestNamespace="http://oxigen.net", ResponseNamespace="http://oxigen.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public StringErrorWrapper GetUserGUIDByUsername([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string username, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string systemPassPhrase) {
            object[] results = this.Invoke("GetUserGUIDByUsername", new object[] {
                        username,
                        systemPassPhrase});
            return ((StringErrorWrapper)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserGUIDByUsernameAsync(string username, string systemPassPhrase) {
            this.GetUserGUIDByUsernameAsync(username, systemPassPhrase, null);
        }
        
        /// <remarks/>
        public void GetUserGUIDByUsernameAsync(string username, string systemPassPhrase, object userState) {
            if ((this.GetUserGUIDByUsernameOperationCompleted == null)) {
                this.GetUserGUIDByUsernameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserGUIDByUsernameOperationCompleted);
            }
            this.InvokeAsync("GetUserGUIDByUsername", new object[] {
                        username,
                        systemPassPhrase}, this.GetUserGUIDByUsernameOperationCompleted, userState);
        }
        
        private void OnGetUserGUIDByUsernameOperationCompleted(object arg) {
            if ((this.GetUserGUIDByUsernameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserGUIDByUsernameCompleted(this, new GetUserGUIDByUsernameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://oxigen.net/IUserManagementServicesNonStreamer/RemoveStreamsFromSilentMerge" +
            "", RequestNamespace="http://oxigen.net", ResponseNamespace="http://oxigen.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public SimpleErrorWrapper RemoveStreamsFromSilentMerge([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string machineGUID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ChannelSubscriptions channelSubscriptions, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string systemPassPhrase) {
            object[] results = this.Invoke("RemoveStreamsFromSilentMerge", new object[] {
                        machineGUID,
                        channelSubscriptions,
                        systemPassPhrase});
            return ((SimpleErrorWrapper)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveStreamsFromSilentMergeAsync(string machineGUID, ChannelSubscriptions channelSubscriptions, string systemPassPhrase) {
            this.RemoveStreamsFromSilentMergeAsync(machineGUID, channelSubscriptions, systemPassPhrase, null);
        }
        
        /// <remarks/>
        public void RemoveStreamsFromSilentMergeAsync(string machineGUID, ChannelSubscriptions channelSubscriptions, string systemPassPhrase, object userState) {
            if ((this.RemoveStreamsFromSilentMergeOperationCompleted == null)) {
                this.RemoveStreamsFromSilentMergeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveStreamsFromSilentMergeOperationCompleted);
            }
            this.InvokeAsync("RemoveStreamsFromSilentMerge", new object[] {
                        machineGUID,
                        channelSubscriptions,
                        systemPassPhrase}, this.RemoveStreamsFromSilentMergeOperationCompleted, userState);
        }
        
        private void OnRemoveStreamsFromSilentMergeOperationCompleted(object arg) {
            if ((this.RemoveStreamsFromSilentMergeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveStreamsFromSilentMergeCompleted(this, new RemoveStreamsFromSilentMergeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://oxigen.net/IUserManagementServicesNonStreamer/ReplaceStreamsFromSilentMerg" +
            "e", RequestNamespace="http://oxigen.net", ResponseNamespace="http://oxigen.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public SimpleErrorWrapper ReplaceStreamsFromSilentMerge([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string machineGUID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ChannelSubscriptions channelSubscriptions, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string systemPassPhrase) {
            object[] results = this.Invoke("ReplaceStreamsFromSilentMerge", new object[] {
                        machineGUID,
                        channelSubscriptions,
                        systemPassPhrase});
            return ((SimpleErrorWrapper)(results[0]));
        }
        
        /// <remarks/>
        public void ReplaceStreamsFromSilentMergeAsync(string machineGUID, ChannelSubscriptions channelSubscriptions, string systemPassPhrase) {
            this.ReplaceStreamsFromSilentMergeAsync(machineGUID, channelSubscriptions, systemPassPhrase, null);
        }
        
        /// <remarks/>
        public void ReplaceStreamsFromSilentMergeAsync(string machineGUID, ChannelSubscriptions channelSubscriptions, string systemPassPhrase, object userState) {
            if ((this.ReplaceStreamsFromSilentMergeOperationCompleted == null)) {
                this.ReplaceStreamsFromSilentMergeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReplaceStreamsFromSilentMergeOperationCompleted);
            }
            this.InvokeAsync("ReplaceStreamsFromSilentMerge", new object[] {
                        machineGUID,
                        channelSubscriptions,
                        systemPassPhrase}, this.ReplaceStreamsFromSilentMergeOperationCompleted, userState);
        }
        
        private void OnReplaceStreamsFromSilentMergeOperationCompleted(object arg) {
            if ((this.ReplaceStreamsFromSilentMergeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReplaceStreamsFromSilentMergeCompleted(this, new ReplaceStreamsFromSilentMergeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://oxigen.net/IUserManagementServicesNonStreamer/AddStreamsFromSilentMerge", RequestNamespace="http://oxigen.net", ResponseNamespace="http://oxigen.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public SimpleErrorWrapper AddStreamsFromSilentMerge([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string machineGUID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ChannelSubscriptions channelSubscriptions, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string systemPassPhrase) {
            object[] results = this.Invoke("AddStreamsFromSilentMerge", new object[] {
                        machineGUID,
                        channelSubscriptions,
                        systemPassPhrase});
            return ((SimpleErrorWrapper)(results[0]));
        }
        
        /// <remarks/>
        public void AddStreamsFromSilentMergeAsync(string machineGUID, ChannelSubscriptions channelSubscriptions, string systemPassPhrase) {
            this.AddStreamsFromSilentMergeAsync(machineGUID, channelSubscriptions, systemPassPhrase, null);
        }
        
        /// <remarks/>
        public void AddStreamsFromSilentMergeAsync(string machineGUID, ChannelSubscriptions channelSubscriptions, string systemPassPhrase, object userState) {
            if ((this.AddStreamsFromSilentMergeOperationCompleted == null)) {
                this.AddStreamsFromSilentMergeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddStreamsFromSilentMergeOperationCompleted);
            }
            this.InvokeAsync("AddStreamsFromSilentMerge", new object[] {
                        machineGUID,
                        channelSubscriptions,
                        systemPassPhrase}, this.AddStreamsFromSilentMergeOperationCompleted, userState);
        }
        
        private void OnAddStreamsFromSilentMergeOperationCompleted(object arg) {
            if ((this.AddStreamsFromSilentMergeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddStreamsFromSilentMergeCompleted(this, new AddStreamsFromSilentMergeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="string", Namespace="http://www.w3.org/2001/XMLSchema")]
    [System.Xml.Serialization.XmlRootAttribute("Message", Namespace="http://oxigen.net", IsNullable=true)]
    public partial class string5 : System.Web.Services.Protocols.SoapHeader {
        
        private string[] textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/ServiceErrorReporting")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oxigen.net", IsNullable=false)]
    public partial class ErrorStatus : System.Web.Services.Protocols.SoapHeader {
        
        private string[] textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="string", Namespace="http://www.w3.org/2001/XMLSchema")]
    [System.Xml.Serialization.XmlRootAttribute("UserGUID", Namespace="http://oxigen.net", IsNullable=true)]
    public partial class string3 : System.Web.Services.Protocols.SoapHeader {
        
        private string[] textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="string", Namespace="http://www.w3.org/2001/XMLSchema")]
    [System.Xml.Serialization.XmlRootAttribute("MachineGUID", Namespace="http://oxigen.net", IsNullable=true)]
    public partial class string1 : System.Web.Services.Protocols.SoapHeader {
        
        private string[] textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.w3.org/2001/XMLSchema")]
    [System.Xml.Serialization.XmlRootAttribute("Checksum", Namespace="http://oxigen.net", IsNullable=true)]
    public partial class @string : System.Web.Services.Protocols.SoapHeader {
        
        private string[] textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/InterCommunicationStructures")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oxigen.net", IsNullable=false)]
    public partial class DataFileType : System.Web.Services.Protocols.SoapHeader {
        
        private string[] textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="string", Namespace="http://www.w3.org/2001/XMLSchema")]
    [System.Xml.Serialization.XmlRootAttribute("SystemPassPhrase", Namespace="http://oxigen.net", IsNullable=true)]
    public partial class string2 : System.Web.Services.Protocols.SoapHeader {
        
        private string[] textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/ServiceErrorReporting")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oxigen.net", IsNullable=false)]
    public partial class ErrorSeverity : System.Web.Services.Protocols.SoapHeader {
        
        private string[] textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="string", Namespace="http://www.w3.org/2001/XMLSchema")]
    [System.Xml.Serialization.XmlRootAttribute("ErrorCode", Namespace="http://oxigen.net", IsNullable=true)]
    public partial class string4 : System.Web.Services.Protocols.SoapHeader {
        
        private string[] textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.w3.org/2001/XMLSchema")]
    [System.Xml.Serialization.XmlRootAttribute("ChannelID", Namespace="http://oxigen.net", IsNullable=false)]
    public partial class @long : System.Web.Services.Protocols.SoapHeader {
        
        private string[] textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StringErrorWrapper))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/ServiceErrorReporting")]
    public partial class SimpleErrorWrapper {
        
        private string errorCodeField;
        
        private ErrorSeverity1 errorSeverityField;
        
        private bool errorSeverityFieldSpecified;
        
        private ErrorStatus1 errorStatusField;
        
        private bool errorStatusFieldSpecified;
        
        private string messageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ErrorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
            }
        }
        
        /// <remarks/>
        public ErrorSeverity1 ErrorSeverity {
            get {
                return this.errorSeverityField;
            }
            set {
                this.errorSeverityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ErrorSeveritySpecified {
            get {
                return this.errorSeverityFieldSpecified;
            }
            set {
                this.errorSeverityFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public ErrorStatus1 ErrorStatus {
            get {
                return this.errorStatusField;
            }
            set {
                this.errorStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ErrorStatusSpecified {
            get {
                return this.errorStatusFieldSpecified;
            }
            set {
                this.errorStatusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="ErrorSeverity", Namespace="http://schemas.datacontract.org/2004/07/ServiceErrorReporting")]
    public enum ErrorSeverity1 {
        
        /// <remarks/>
        Severe,
        
        /// <remarks/>
        Retriable,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="ErrorStatus", Namespace="http://schemas.datacontract.org/2004/07/ServiceErrorReporting")]
    public enum ErrorStatus1 {
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        Failure,
        
        /// <remarks/>
        ChecksumEqual,
        
        /// <remarks/>
        NoData,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/OxigenIIAdvertising.SOAStructures")]
    public partial class PcInfo {
        
        private int pcIDField;
        
        private bool pcIDFieldSpecified;
        
        private string pcNameField;
        
        /// <remarks/>
        public int PcID {
            get {
                return this.pcIDField;
            }
            set {
                this.pcIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PcIDSpecified {
            get {
                return this.pcIDFieldSpecified;
            }
            set {
                this.pcIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string PcName {
            get {
                return this.pcNameField;
            }
            set {
                this.pcNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/OxigenIIUserMgmtServicesService")]
    public partial class UserInfo {
        
        private string annualHouseholdIncomeField;
        
        private string countryField;
        
        private System.DateTime dOBField;
        
        private bool dOBFieldSpecified;
        
        private string employmentLevelField;
        
        private string firstNameField;
        
        private string genderField;
        
        private string lastNameField;
        
        private string occupationSectorField;
        
        private string stateField;
        
        private string townCityField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string AnnualHouseholdIncome {
            get {
                return this.annualHouseholdIncomeField;
            }
            set {
                this.annualHouseholdIncomeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DOB {
            get {
                return this.dOBField;
            }
            set {
                this.dOBField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DOBSpecified {
            get {
                return this.dOBFieldSpecified;
            }
            set {
                this.dOBFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string EmploymentLevel {
            get {
                return this.employmentLevelField;
            }
            set {
                this.employmentLevelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Gender {
            get {
                return this.genderField;
            }
            set {
                this.genderField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string OccupationSector {
            get {
                return this.occupationSectorField;
            }
            set {
                this.occupationSectorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string TownCity {
            get {
                return this.townCityField;
            }
            set {
                this.townCityField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/OxigenIIAdvertising.AppData")]
    public partial class ChannelSubscription {
        
        private string channelGUIDField;
        
        private long channelIDField;
        
        private bool channelIDFieldSpecified;
        
        private string channelNameField;
        
        private float channelWeightingNormalisedField;
        
        private bool channelWeightingNormalisedFieldSpecified;
        
        private int channelWeightingUnnormalisedField;
        
        private bool channelWeightingUnnormalisedFieldSpecified;
        
        private bool lockedField;
        
        private bool lockedFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ChannelGUID {
            get {
                return this.channelGUIDField;
            }
            set {
                this.channelGUIDField = value;
            }
        }
        
        /// <remarks/>
        public long ChannelID {
            get {
                return this.channelIDField;
            }
            set {
                this.channelIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChannelIDSpecified {
            get {
                return this.channelIDFieldSpecified;
            }
            set {
                this.channelIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ChannelName {
            get {
                return this.channelNameField;
            }
            set {
                this.channelNameField = value;
            }
        }
        
        /// <remarks/>
        public float ChannelWeightingNormalised {
            get {
                return this.channelWeightingNormalisedField;
            }
            set {
                this.channelWeightingNormalisedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChannelWeightingNormalisedSpecified {
            get {
                return this.channelWeightingNormalisedFieldSpecified;
            }
            set {
                this.channelWeightingNormalisedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int ChannelWeightingUnnormalised {
            get {
                return this.channelWeightingUnnormalisedField;
            }
            set {
                this.channelWeightingUnnormalisedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChannelWeightingUnnormalisedSpecified {
            get {
                return this.channelWeightingUnnormalisedFieldSpecified;
            }
            set {
                this.channelWeightingUnnormalisedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool Locked {
            get {
                return this.lockedField;
            }
            set {
                this.lockedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LockedSpecified {
            get {
                return this.lockedFieldSpecified;
            }
            set {
                this.lockedFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/OxigenIIAdvertising.AppData")]
    public partial class ChannelSubscriptions {
        
        private ChannelSubscription[] subscriptionSetField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public ChannelSubscription[] SubscriptionSet {
            get {
                return this.subscriptionSetField;
            }
            set {
                this.subscriptionSetField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/ServiceErrorReporting")]
    public partial class StringErrorWrapper : SimpleErrorWrapper {
        
        private string returnStringField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ReturnString {
            get {
                return this.returnStringField;
            }
            set {
                this.returnStringField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetUserExistsByUserCredentialsCompletedEventHandler(object sender, GetUserExistsByUserCredentialsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserExistsByUserCredentialsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserExistsByUserCredentialsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SimpleErrorWrapper Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SimpleErrorWrapper)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string userGUID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void RegisterNewUserCompletedEventHandler(object sender, RegisterNewUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegisterNewUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegisterNewUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SimpleErrorWrapper Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SimpleErrorWrapper)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetExistingUserDetailsCompletedEventHandler(object sender, GetExistingUserDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetExistingUserDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetExistingUserDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SimpleErrorWrapper Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SimpleErrorWrapper)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public UserInfo userInfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserInfo)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateUserAccountCompletedEventHandler(object sender, UpdateUserAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateUserAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateUserAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SimpleErrorWrapper Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SimpleErrorWrapper)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPcListForInstallerEmailCompletedEventHandler(object sender, GetPcListForInstallerEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPcListForInstallerEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPcListForInstallerEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SimpleErrorWrapper Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SimpleErrorWrapper)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public PcInfo[] pcs {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PcInfo[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPcListForInstallerGUIDCompletedEventHandler(object sender, GetPcListForInstallerGUIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPcListForInstallerGUIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPcListForInstallerGUIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SimpleErrorWrapper Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SimpleErrorWrapper)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public PcInfo[] pcs {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PcInfo[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void LinkPCAndSubscriptionsExistingPCCompletedEventHandler(object sender, LinkPCAndSubscriptionsExistingPCCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LinkPCAndSubscriptionsExistingPCCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LinkPCAndSubscriptionsExistingPCCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SimpleErrorWrapper Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SimpleErrorWrapper)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CheckEmailAddressExistsCompletedEventHandler(object sender, CheckEmailAddressExistsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckEmailAddressExistsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckEmailAddressExistsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SimpleErrorWrapper Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SimpleErrorWrapper)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void EditSubscriptionsCompletedEventHandler(object sender, EditSubscriptionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditSubscriptionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditSubscriptionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SimpleErrorWrapper Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SimpleErrorWrapper)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPCSubscriptionsByPCIDCompletedEventHandler(object sender, GetPCSubscriptionsByPCIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPCSubscriptionsByPCIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPCSubscriptionsByPCIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SimpleErrorWrapper Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SimpleErrorWrapper)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ChannelSubscriptions channelSubscriptions {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ChannelSubscriptions)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPCSubscriptionsByMachineGUIDCompletedEventHandler(object sender, GetPCSubscriptionsByMachineGUIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPCSubscriptionsByMachineGUIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPCSubscriptionsByMachineGUIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SimpleErrorWrapper Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SimpleErrorWrapper)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ChannelSubscriptions channelSubscriptions {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ChannelSubscriptions)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetMatchedUserGUIDCompletedEventHandler(object sender, GetMatchedUserGUIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMatchedUserGUIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMatchedUserGUIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SimpleErrorWrapper Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SimpleErrorWrapper)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetMatchedMachineGUIDCompletedEventHandler(object sender, GetMatchedMachineGUIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMatchedMachineGUIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMatchedMachineGUIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SimpleErrorWrapper Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SimpleErrorWrapper)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SendEmailReminderCompletedEventHandler(object sender, SendEmailReminderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendEmailReminderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendEmailReminderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SimpleErrorWrapper Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SimpleErrorWrapper)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void RegisterSoftwareUninstallCompletedEventHandler(object sender, RegisterSoftwareUninstallCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegisterSoftwareUninstallCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegisterSoftwareUninstallCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SimpleErrorWrapper Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SimpleErrorWrapper)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SendErrorReportCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CreatePCIfNotExistsCompletedEventHandler(object sender, CreatePCIfNotExistsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreatePCIfNotExistsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreatePCIfNotExistsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StringErrorWrapper Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StringErrorWrapper)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SyncWithServerNoPersonalDetailsCompletedEventHandler(object sender, SyncWithServerNoPersonalDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SyncWithServerNoPersonalDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SyncWithServerNoPersonalDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SimpleErrorWrapper Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SimpleErrorWrapper)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetUserGUIDByUsernameCompletedEventHandler(object sender, GetUserGUIDByUsernameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserGUIDByUsernameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserGUIDByUsernameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StringErrorWrapper Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StringErrorWrapper)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void RemoveStreamsFromSilentMergeCompletedEventHandler(object sender, RemoveStreamsFromSilentMergeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveStreamsFromSilentMergeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveStreamsFromSilentMergeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SimpleErrorWrapper Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SimpleErrorWrapper)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ReplaceStreamsFromSilentMergeCompletedEventHandler(object sender, ReplaceStreamsFromSilentMergeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReplaceStreamsFromSilentMergeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReplaceStreamsFromSilentMergeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SimpleErrorWrapper Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SimpleErrorWrapper)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AddStreamsFromSilentMergeCompletedEventHandler(object sender, AddStreamsFromSilentMergeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddStreamsFromSilentMergeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddStreamsFromSilentMergeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SimpleErrorWrapper Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SimpleErrorWrapper)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591