<?xml version="1.0" encoding="utf-8"?>
<!--
  For more information on how to configure your ASP.NET application, please visit
  http://go.microsoft.com/fwlink/?LinkId=152368
  -->
<configuration>
  <configSections>
    <section name="hibernate-configuration" type="NHibernate.Cfg.ConfigurationSectionHandler, NHibernate" />
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net" requirePermission="false" />
    <sectionGroup name="queryStringParameterGroup">
      <section name="enumQueryStringParameterSet" type="OxigenIIPresentation.CommandHandlers.QueryStringParameterValueConfiguration" allowDefinition="Everywhere" allowExeDefinition="MachineToApplication" restartOnExternalChanges="true" />
    </sectionGroup>
    <section name="channelCommandSet" type="OxigenIIPresentation.CommandHandlers.ChannelCommandConfigurationSection" allowDefinition="Everywhere" allowExeDefinition="MachineToApplication" restartOnExternalChanges="true" />
    <sectionGroup name="elmah">
      <section name="security" requirePermission="false" type="Elmah.SecuritySectionHandler, Elmah" />
      <section name="errorLog" requirePermission="false" type="Elmah.ErrorLogSectionHandler, Elmah" />
      <section name="errorMail" requirePermission="false" type="Elmah.ErrorMailSectionHandler, Elmah" />
      <section name="errorFilter" requirePermission="false" type="Elmah.ErrorFilterSectionHandler, Elmah" />
    </sectionGroup>
  </configSections>
  <channelCommandSet>
    <channelCommands>
      <add name="categories" type="OxigenIIPresentation.CommandHandlers.Processors.Get.CategoryProcessor" />
      <add name="channels" type="OxigenIIPresentation.CommandHandlers.Processors.Get.ChannelListProcessor" />
      <add name="channeldetails" type="OxigenIIPresentation.CommandHandlers.Processors.Get.ChannelDetailsProcessor" />
      <add name="search" type="OxigenIIPresentation.CommandHandlers.Processors.Get.SearchProcessor" />
      <add name="pcs" type="OxigenIIPresentation.CommandHandlers.Processors.Get.PcProcessor" />
      <add name="pcStreams" type="OxigenIIPresentation.CommandHandlers.Processors.Get.PcStreamProcessor" />
      <add name="pcStreamsAll" type="OxigenIIPresentation.CommandHandlers.Processors.Get.PcStreamAllProcessor" />
      <add name="login" type="OxigenIIPresentation.CommandHandlers.Processors.Post.LoginProcessor" />
      <add name="signup" type="OxigenIIPresentation.CommandHandlers.Processors.Post.SignupProcessor" />
      <add name="logout" type="OxigenIIPresentation.CommandHandlers.Processors.Get.LogoutProcessor" />
      <add name="rawContent" type="OxigenIIPresentation.CommandHandlers.Processors.Get.RawContentByFolderIDProcessor" />
      <add name="streamSlides" type="OxigenIIPresentation.CommandHandlers.Processors.Get.StreamSlidesProcessor" />
      <add name="userStreams" type="OxigenIIPresentation.CommandHandlers.Processors.Get.UserStreamsProcessor" />
      <add name="folders" type="OxigenIIPresentation.CommandHandlers.Processors.Get.ContentFoldersProcessor" />
      <add name="getRawContent" type="OxigenIIPresentation.CommandHandlers.Processors.Get.RawContentProcessor" />
      <add name="putRawContent" type="OxigenIIPresentation.CommandHandlers.Processors.Post.RawContentProcessor" />
      <add name="getStream" type="OxigenIIPresentation.CommandHandlers.Processors.Get.ContentStreamProcessor" />
      <add name="putStream" type="OxigenIIPresentation.CommandHandlers.Processors.Post.EditChannelProcessor" />
      <add name="getChannelSlideProperties" type="OxigenIIPresentation.CommandHandlers.Processors.Get.GetChannelSlidePropertiesProcessor" />
      <add name="editChannelSlideProperties" type="OxigenIIPresentation.CommandHandlers.Processors.Post.EditChannelSlidePropertiesProcessor" />
      <add name="isLoggedOn" type="OxigenIIPresentation.CommandHandlers.Processors.Get.IsLoggedOnProcessor" />
      <add name="addPCStream" type="OxigenIIPresentation.CommandHandlers.Processors.Post.AddPCStreamProcessor" />
      <add name="removePCStream" type="OxigenIIPresentation.CommandHandlers.Processors.Post.RemovePCStreamProcessor" />
      <add name="addChannelContents" type="OxigenIIPresentation.CommandHandlers.Processors.Post.AddChannelContentsProcessor" />
      <add name="removeChannelContents" type="OxigenIIPresentation.CommandHandlers.Processors.Post.RemoveChannelContentProcessor" />
      <add name="addSlideContents" type="OxigenIIPresentation.CommandHandlers.Processors.Post.AddSlideContentsProcessor" />
      <add name="removeSlideContents" type="OxigenIIPresentation.CommandHandlers.Processors.Post.RemoveSlideContentProcessor" />
      <add name="removeRawContents" type="OxigenIIPresentation.CommandHandlers.Processors.Post.RemoveAssetContentProcessor" />
      <add name="addAssetContentFolder" type="OxigenIIPresentation.CommandHandlers.Processors.Post.AddAssetContentFolderProcessor" />
      <add name="editAssetContentFolder" type="OxigenIIPresentation.CommandHandlers.Processors.Post.EditAssetContentFolderProcessor" />
      <add name="removeAssetContentFolder" type="OxigenIIPresentation.CommandHandlers.Processors.Post.RemoveAssetContentFolderProcessor" />
      <add name="addPC" type="OxigenIIPresentation.CommandHandlers.Processors.Post.AddPCProcessor" />
      <add name="renamePC" type="OxigenIIPresentation.CommandHandlers.Processors.Post.RenamePCProcessor" />
      <add name="channelWeighting" type="OxigenIIPresentation.CommandHandlers.Processors.Post.EditChannelWeightingProcessor" />
      <add name="unlockStream" type="OxigenIIPresentation.CommandHandlers.Processors.Post.UnlockStreamProcessor" />
      <add name="rawContentAll" type="OxigenIIPresentation.CommandHandlers.Processors.Get.RawContentAllProcessor" />
      <add name="slideContentAll" type="OxigenIIPresentation.CommandHandlers.Processors.Get.SlideContentAllProcessor" />
      <add name="addSlideFolder" type="OxigenIIPresentation.CommandHandlers.Processors.Post.AddSlideFolderProcessor" />
      <add name="editSlideFolder" type="OxigenIIPresentation.CommandHandlers.Processors.Post.EditSlideFolderProcessor" />
      <add name="removeSlideFolder" type="OxigenIIPresentation.CommandHandlers.Processors.Post.RemoveSlideFolderProcessor" />
      <add name="addStream" type="OxigenIIPresentation.CommandHandlers.Processors.Post.AddChannelProcessor" />
      <add name="removeStream" type="OxigenIIPresentation.CommandHandlers.Processors.Post.RemoveChannelProcessor" />
      <add name="streamAll" type="OxigenIIPresentation.CommandHandlers.Processors.Get.ChannelAllProcessor" />
      <add name="putStreamThumbnail" type="OxigenIIPresentation.CommandHandlers.Processors.Post.EditChannelThumbnailProcessor" />
      <add name="editSlideProperties" type="OxigenIIPresentation.CommandHandlers.Processors.Post.EditSlidePropertiesProcessor" />
      <add name="getSlideProperties" type="OxigenIIPresentation.CommandHandlers.Processors.Get.GetSlidePropertiesProcessor" />
      <add name="moveRawContent" type="OxigenIIPresentation.CommandHandlers.Processors.Post.MoveRawContentProcessor" />
      <add name="moveSlideContent" type="OxigenIIPresentation.CommandHandlers.Processors.Post.MoveSlideProcessor" />
      <add name="movePCStreams" type="OxigenIIPresentation.CommandHandlers.Processors.Post.MovePCStreamProcessor" />
      <add name="getUserQuota" type="OxigenIIPresentation.CommandHandlers.Processors.Get.UserQuotaProcessor" />
      <add name="setCategory" type="OxigenIIPresentation.CommandHandlers.Processors.Post.SetCategoryProcessor" />
      <add name="templateConvert" type="OxigenIIPresentation.CommandHandlers.Processors.Post.TemplateConvertProcessor" />
      <add name="getPreview" type="OxigenIIPresentation.CommandHandlers.Processors.Get.GetPreviewProcessor" />
      <add name="sendRequest" type="OxigenIIPresentation.CommandHandlers.Processors.Get.PasswordRequestProcessor" />
      <add name="getUploadStatus" type="OxigenIIPresentation.CommandHandlers.Processors.Get.UploadStatusProcessor" />
    </channelCommands>
  </channelCommandSet>
  <queryStringParameterGroup>
    <enumQueryStringParameterSet>
      <queryStringParameterSet>
        <add name="p" value="Popularity" />
        <add name="r" value="MostRecent" />
        <add name="a" value="Alphabetical" />
      </queryStringParameterSet>
    </enumQueryStringParameterSet>
  </queryStringParameterGroup>

  <system.serviceModel>
    <client>
      <endpoint address="net.pipe://localhost/BLPipe" bindingConfiguration="NonStreamedBinding" binding="netNamedPipeBinding" contract="OxigenIIAdvertising.ServiceContracts.BLServices.IBLService" />
    </client>
    <bindings>
      <netNamedPipeBinding>
        <binding name="NonStreamedBinding" transferMode="Buffered" receiveTimeout="00:01:00" sendTimeout="00:01:00"></binding>
      </netNamedPipeBinding>
    </bindings>
  </system.serviceModel>
  <system.web>
    <sessionState mode="InProc" cookieless="false" timeout="20" />
    <httpRuntime executionTimeout="54000" maxRequestLength="102400" requestLengthDiskThreshold="256" requestValidationMode="2.0" />
    <!-- 
            Set compilation debug="true" to insert debugging 
            symbols into the compiled page. Because this 
            affects performance, set this value to true only 
            during development.
        -->
    <compilation debug="true" targetFramework="4.0">
      <assemblies>
        <add assembly="System.Web.Abstractions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
        <add assembly="System.Web.Helpers, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
        <add assembly="System.Web.Routing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
        <add assembly="System.Web.Mvc, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
        <add assembly="System.Web.WebPages, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
      </assemblies>
    </compilation>
    <!--
            The <authentication> section enables configuration 
            of the security authentication mode used by 
            ASP.NET to identify an incoming user. 
        -->
    <authentication mode="Forms">
      <forms loginUrl="~/Account/LogOn" timeout="2880" />
    </authentication>
    <!--
            The <customErrors> section enables configuration 
            of what to do if/when an unhandled error occurs 
            during the execution of a request. Specifically, 
            it enables developers to configure html error pages 
            to be displayed in place of a error stack trace.

        <customErrors mode="RemoteOnly" defaultRedirect="GenericErrorPage.htm">
            <error statusCode="403" redirect="NoAccess.htm" />
            <error statusCode="404" redirect="FileNotFound.htm" />
        </customErrors>
        -->
    <customErrors mode="On" defaultRedirect="~/ErrorGeneric.aspx">
      <error statusCode="500" redirect="~/ErrorGeneric.aspx"/>
      <error statusCode="404" redirect="~/Error404.aspx"/>
      <error statusCode="413" redirect="~/Error413.aspx"/>
    </customErrors>

    <httpHandlers>
      <add verb="GET" path="get.ox" type="OxigenIIPresentation.CommandHandlers.GetCommandHandler" />
      <add verb="GET,POST" path="put.ox" type="OxigenIIPresentation.CommandHandlers.PutCommandHandler" />
      <add verb="POST,GET,HEAD" path="elmah.axd" type="Elmah.ErrorLogPageFactory, Elmah" />
    </httpHandlers>
    <pages controlRenderingCompatibilityVersion="3.5" clientIDMode="AutoID">
      <namespaces>
        <add namespace="System.Web.Helpers" />
        <add namespace="System.Web.Mvc" />
        <add namespace="System.Web.Mvc.Ajax" />
        <add namespace="System.Web.Mvc.Html" />
        <add namespace="System.Web.Routing" />
        <add namespace="System.Web.WebPages" />
        <add namespace="Microsoft.Web.Mvc" />
        <add namespace="SharpArch.Web.Areas" />
        <add namespace="Oxigen.Web.Controllers" />
      </namespaces>
      <controls>
        <add tagPrefix="Oxigen" assembly="OxigenIIPresentation" namespace="OxigenIIPresentation" />
      </controls>
    </pages>
    <httpModules>
      <add name="ErrorLog" type="Elmah.ErrorLogModule, Elmah" />
    </httpModules>
  </system.web>
  <!-- 
        The system.webServer section is required for running ASP.NET AJAX under Internet
        Information Services 7.0.  It is not necessary for previous version of IIS.
    -->
  <system.webServer>
    <security>
      <requestFiltering>
        <requestLimits maxAllowedContentLength="2000000000"></requestLimits>
      </requestFiltering>
    </security>
    <modules runAllManagedModulesForAllRequests="true">
      <remove name="ScriptModule" />
      <add name="ScriptModule" preCondition="managedHandler" type="System.Web.Handlers.ScriptModule, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
      <add name="ErrorLog" type="Elmah.ErrorLogModule, Elmah" />
    </modules>
    <handlers>
      <remove name="WebServiceHandlerFactory-Integrated" />
      <remove name="ScriptHandlerFactory" />
      <remove name="ScriptHandlerFactoryAppServices" />
      <remove name="ScriptResource" />
      <add name="PutCommandHandler" path="put.ox" verb="GET,POST" type="OxigenIIPresentation.CommandHandlers.PutCommandHandler" resourceType="Unspecified" preCondition="integratedMode" />
      <add name="GetCommandHandler" path="get.ox" verb="GET" type="OxigenIIPresentation.CommandHandlers.GetCommandHandler" resourceType="Unspecified" preCondition="integratedMode" />
      <add name="ScriptHandlerFactory" verb="*" path="*.asmx" preCondition="integratedMode" type="System.Web.Script.Services.ScriptHandlerFactory, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
      <add name="ScriptHandlerFactoryAppServices" verb="*" path="*_AppService.axd" preCondition="integratedMode" type="System.Web.Script.Services.ScriptHandlerFactory, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
      <add name="ScriptResource" preCondition="integratedMode" verb="GET,HEAD" path="ScriptResource.axd" type="System.Web.Handlers.ScriptResourceHandler, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
      <add name="Elmah" verb="POST,GET,HEAD" path="elmah.axd" type="Elmah.ErrorLogPageFactory, Elmah" />
    </handlers>
    <urlCompression doStaticCompression="false" />
    <validation validateIntegratedModeConfiguration="false" />
  </system.webServer>
  <appSettings>
    <add key="serverTimeout" value="3600" />
    <add key="minDisplayDuration" value="5" />
    <add key="maxDisplayDuration" value="300" />
    <add key="defaultDisplayDuration" value="10" />
    <add key="imageUploaderLicense" value="71068-10000-D1588-7A44E-AEA51;72068-10000-1196E-2E20F-E128F" />
    <add key="imageUploaderFileMask" value="*.jpeg;*.jpg;*.jpe;*.png;*.swf;*.bmp;*.tiff;*.tif;*.gif;*.mov;*.avi;*.wmv;" />
    <add key="assetContentPath" value="C:\Oxigen2\Repository\AssetFiles\AssetContents\" />
    <add key="slidePath" value="C:\Oxigen2\Repository\AssetFiles\Slides\" />
    <add key="templatePath" value="C:\Oxigen2\Repository\AssetFiles\Templates\" />
    <add key="thumbnailTemplatePath" value="C:\Oxigen2\Repository\Thumbnails\Templates\" />
    <add key="thumbnailAssetContentPath" value="C:\Oxigen2\Repository\Thumbnails\AssetContents\" />
    <add key="thumbnailSlidePath" value="C:\Oxigen2\Repository\Thumbnails\Slides\" />
    <add key="thumbnailAssetContentRelativePath" value="http://localhost:9526/AssetContents/" />
    <add key="thumbnailSlideRelativePath" value="http://localhost:9526/Slides/" />
    <add key="thumbnailChannelRelativePath" value="http://localhost:9526/Channels/" />
    <add key="thumbnailAssetContentRelativePathWinFS" value="Thumbnails\AssetContents\" />
    <add key="thumbnailSlideRelativePathWinFS" value="Thumbnails\Slides\" />
    <add key="previewFramesAssetContentPath" value="C:\Oxigen2\Repository\AssetFiles\PreviewFrames\AssetContents\" />
    <add key="previewFramesSlidePath" value="C:\Oxigen2\Repository\AssetFiles\PreviewFrames\Slides\" />
    <add key="noPreviewImagePath" value="C:\Oxigen2\Repository\AssetFiles\PreviewFrames\NoPreview.jpg" />
    <add key="debugPath" value="C:\Oxigen2\Repository\debug.txt" />
    <add key="tempInstallersPath" value="c:\Oxigen\TempInstallers\" />
    <add key="signToolPath" value="&quot;C:\Program Files\Microsoft SDKs\Windows\v6.0A\Bin\signtool.exe&quot;" />
    <add key="signToolArguments" value="sign /f &quot;C:\Oxigen\oxigen II Ltd Code Signing Cert.pfx&quot; /p 5513070 /t http://timestamp.verisign.com/scripts/timstamp.dll " />
    <add key="streamDetailsURL" value="http://new.oxigen.net/ChannelDetails.aspx?channelID=" />
    <add key="displayDurationFlashMin" value="5" />
    <add key="displayDurationFlashMax" value="300" />
    <add key="displayDurationVideoMin" value="5" />
    <add key="displayDurationVideoMax" value="300" />
    <add key="displayDurationImageMin" value="5" />
    <add key="displayDurationImageMax" value="20" />
    <add key="contactUsAddress" value="michali.konstantinidis@obs-group.co.uk" />
    <add key="ClientValidationEnabled" value="true" />
    <add key="UnobtrusiveJavaScriptEnabled" value="true" />
  </appSettings>
  <log4net>
    <appender name="LogToFile" type="log4net.Appender.FileAppender">
      <file value="../../logs/Oxigen.Web.log" />
      <appendToFile value="false" />
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%d [%t] %-5l - %m%n%n" />
      </layout>
    </appender>
    <appender name="ConsoleAppender" type="log4net.Appender.ConsoleAppender">
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%d [%t] %-5l - %m%n%n" />
      </layout>
    </appender>
    <root>
      <!-- Value of priority may be ALL, DEBUG, INFO, WARN, ERROR, FATAL, OFF -->
      <priority value="OFF" />
      <appender-ref ref="LogToFile" />
    </root>
  </log4net>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Mvc" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="1.0.0.0-2.0.0.0" newVersion="3.0.0.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
  <connectionStrings>
    <add name="Oxigen" connectionString="Data Source=(local)\SQLEXPRESS;Initial Catalog=oxigen;Trusted_Connection=True;Application Name=Oxigen;"/>
  </connectionStrings>

  <hibernate-configuration xmlns="urn:nhibernate-configuration-2.2">
    <session-factory>
      <property name="connection.connection_string_name">Oxigen</property>
      <property name="dialect">NHibernate.Dialect.MsSql2005Dialect</property>
      <property name="connection.provider">NHibernate.Connection.DriverConnectionProvider</property>
      <property name="connection.driver_class">NHibernate.Driver.SqlClientDriver</property>
      <property name="show_sql">false</property>
      <property name="connection.release_mode">auto</property>
      <property name="adonet.batch_size">500</property>
      <property name="proxyfactory.factory_class">NHibernate.ByteCode.Castle.ProxyFactoryFactory, NHibernate.ByteCode.Castle</property>
      <!-- Mapping assemblies -->
      <!-- Can't map it for Fluent NHibernate here; instead, load the mapping assembly in Global.asax.cs.
			If you're still using HBMs, you can use the mapping here or pass the assembly via Global.asax.cs
			as well, just like you can do with the Fluent NHibernate assembly(s). -->
      <!-- mapping assembly="Oxigen.Data" -->
    </session-factory>
  </hibernate-configuration>
  <elmah>

    <security allowRemoteAccess="yes" />

        
        <errorLog type="Elmah.SqlErrorLog, Elmah" 
            connectionStringName="Oxigen" />
        


    <!--
            Use to send error reports by e-mail and adjust the attributes
            according to settings desired. Note that only the from and
            to attributes are required. The rest are optional and may
            be removed. If the SMTP server does not require authentication,
            you MUST remove the userName and password attributes or
            set them to empty values (resulting in zero-length strings).
            If you are using ELMAH compiled for .NET Framework 1.x, then
            the to attribute may contain multiple recipient addresses,
            each of which must be delimited by a semi-colon(;). If you are 
            using ELMAH compiled for .NET Framework 2.0 or later, then the
            to attribute may contain multiple recipient addresses,
            each of which must be delimited by a comma (,).

        <errorMail 
            from="elmah@example.com" 
            to="admin@example.com" 
            subject="..."
            priority="Low|Normal|High"
            async="true|false"
            smtpPort="25"
            smtpServer="smtp.example.com" 
            useSsl="true|false"
            userName="johndoe"
            password="secret" 
            noYsod="true|false" />
        -->

    <!--
            Use to send short error messages to a twitter account.
        <errorTweet 
            userName="johndoe" 
            password="secret" />
        -->

    <!--
            Use to prevent errors from being mailed or logged based on
            assertions. An assertion evaluates the current context, resulting
            in a Boolean outcome. An error is filtered if the assertion results
            in true. For a more detailed explanation, see:
            
            http://code.google.com/p/elmah/wiki/ErrorFiltering
            
            The example below will filter errors when any of the
            following conditions occur:
            
            - The status code is set to 404 
            - The root/base cause is System.IO.FileNotFoundException
            - The root/base cause is System.Web.HttpRequestValidationException
            - The user agent making the request identifies itself as "crawler"
            - The request is from the local machine
            
            The assertion below is expressed as a JScript expression and is the
            most generic and simplest of the assertions to use if you are
            familiar with the JavaScript language. It can work in Medium and
            Full trust environments.

        <errorFilter>
            <test>
                <jscript>
                    <expression>
                    <![CDATA[
                    // @assembly mscorlib
                    // @assembly System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
                    // @import System.IO
                    // @import System.Web

                    HttpStatusCode == 404
                    || BaseException instanceof FileNotFoundException 
                    || BaseException instanceof HttpRequestValidationException
                    /* Using RegExp below (see http://msdn.microsoft.com/en-us/library/h6e2eb7w.aspx) */
                    || Context.Request.UserAgent.match(/crawler/i)                      
                    || Context.Request.ServerVariables['REMOTE_ADDR'] == '127.0.0.1' // IPv4 only
                    ]]>
                    </expression>
                </jscript>
            </test>
        </errorFilter>
        -->

  </elmah>
</configuration>